{"version":3,"sources":["serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/Dashboard/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","message","messages","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","doSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","_ref","ADMIN","NavigationAuth","className","data-toggle","data-target","id","href","Link","style","shadow","to","ROUTES","ROLES","SignOut","NavigationNonAuth","contenteditable","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","set","catch","code","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","class","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","onSaveEditText","onEditMessage","_this$props","onRemoveMessage","userId","editedAt","MessageList","Messages_MessageItem","Messages","onListenForMessages","loading","orderByChild","limitToLast","limit","on","messageObject","messageList","keys","onChangeText","onCreateMessage","createdAt","TIMESTAMP","remove","onNextPage","off","Messages_MessageList","HomePage","components_Messages","PasswordChangeForm","doPasswordUpdate","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","currentUser","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","_this3","UserList","usersObject","usersList","pathname","UserItem","onSendPasswordResetEmail","params","Switch","Route","exact","path","component","Dashboard","data-date-inline-picker","BrowserRouter","components_Navigation","LandingPage","AccountPage","AdminPage","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e65a360.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyBzZxwaq5jYjACKxQgI25yyrzV0DIjVNEc\",\n  authDomain: \"seamlessconnectivity-fbce5.firebaseapp.com\",\n  databaseURL: \"https://seamlessconnectivity-fbce5.firebaseio.com\",\n  projectId: \"seamlessconnectivity-fbce5\",\n  storageBucket: \"seamlessconnectivity-fbce5.appspot.com\",\n  messagingSenderId: \"1047561021153\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  /*doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\n    });\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);*/\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once(\"value\")\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref(\"users\");\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref(\"messages\");\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const LANDING = \"/\";\nexport const DASHBOARD = \"/dashboard\";\nexport const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const HOME = \"/home\";\nexport const ACCOUNT = \"/account\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\nexport const ADMIN = \"/admin\";\nexport const ADMIN_DETAILS = \"/admin/:id\";\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst needsEmailVerification = authUser =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map(provider => provider.providerId)\n    .includes('password');\n\nconst withEmailVerification = Component => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            needsEmailVerification(authUser) ? (\n              <div>\n                {this.state.isSent ? (\n                  <p>\n                    E-Mail confirmation sent: Check your E-Mails (Spam\n                    folder included) for a confirmation E-Mail.\n                    Refresh this page once you confirmed your E-Mail.\n                  </p>\n                ) : (\n                  <p>\n                    Verify your E-Mail: Check your E-Mails (Spam folder\n                    included) for a confirmation E-Mail or send\n                    another confirmation E-Mail.\n                  </p>\n                )}\n\n                <button\n                  type=\"button\"\n                  onClick={this.onSendEmailVerification}\n                  disabled={this.state.isSent}\n                >\n                  Send confirmation E-Mail\n                </button>\n              </div>\n            ) : (\n              <Component {...this.props} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nexport default withEmailVerification;\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","export const ADMIN = 'ADMIN';\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { AuthUserContext } from \"../Session\";\nimport SignOutButton from \"../SignOut\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\n    <div className=\"container\">\n      {\" \"}\n      <button\n        className=\"navbar-toggler navbar-toggler-right border-0\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbar18\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbar18\">\n        {\" \"}\n        <a className=\"navbar-brand d-none d-md-block\" href=\"/\">\n          <i className=\"fa d-inline fa-lg fa-circle\" />\n          <b>SEAMLESS CONNECTIVITY</b>\n        </a>\n        <ul className=\"navbar-nav\">\n          <Link\n            className=\"nav-item nav-link\"\n            style={{ shadow: \"0px 0px 0px white\" }}\n            to={ROUTES.LANDING}\n          >\n            Landing\n          </Link>\n          <Link\n            className=\"nav-item nav-link\"\n            style={{ shadow: \"0px 0px 0px white\" }}\n            to={ROUTES.DASHBOARD}\n          >\n            Dashboard\n          </Link>\n          <Link\n            className=\"nav-item nav-link\"\n            style={{ shadow: \"0px 0px 0px white\" }}\n            to={ROUTES.HOME}\n          >\n            Home\n          </Link>\n          <Link\n            className=\"nav-item nav-link\"\n            style={{ shadow: \"0px 0px 0px white\" }}\n            to={ROUTES.ACCOUNT}\n          >\n            Account\n          </Link>\n          {authUser.roles.includes(ROLES.ADMIN) && (\n            <Link\n              className=\"nav-item nav-link\"\n              style={{ shadow: \"0px 0px 0px white\" }}\n              to={ROUTES.ADMIN}\n            >\n              Admin\n            </Link>\n          )}\n\n          <SignOutButton\n            className=\"nav-item text-white shadow d-flex flex-grow-1\"\n            style={{ shadow: \"0px 0px 0px white\" }}\n          />\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nconst NavigationNonAuth = () => (\n  <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\n    <div className=\"container\">\n      {\" \"}\n      <button\n        className=\"navbar-toggler navbar-toggler-right border-0\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbar18\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbar18\">\n        {\" \"}\n        <a className=\"navbar-brand d-none d-md-block\" href=\"/\">\n          <i className=\"fa d-inline fa-lg fa-circle\" />\n          <b contenteditable=\"true\">SEAMLESS CONNECTIVITY</b>\n        </a>\n        <ul className=\"navbar-nav\">\n          <Link\n            className=\"nav-item nav-link\"\n            style={{ shadow: \"0px 0px 0px white\" }}\n            to={ROUTES.LANDING}\n          >\n            Landing\n          </Link>\n          <Link\n            className=\"nav-item nav-link navbar-toggler-left\"\n            style={{ shadow: \"0px 0px 0px white\" }}\n            to={ROUTES.SIGN_IN}\n          >\n            Sign In\n          </Link>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Navigation;\n","import React from 'react';\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n);\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  isAdmin: false,\n  error: null\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = \"auth/email-already-in-use\";\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = [];\n\n    if (isAdmin) {\n      roles.push(ROLES.ADMIN);\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles\n        });\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Admin:\n          <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst SignInPage = () => (\n  <div>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <div\n        class=\"py-5 text-center\"\n        //style={{background-image:\" url('https://static.pingendo.com/cover-bubble-dark.svg')\"}}\n      >\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"mx-auto col-md-6 col-10 bg-white p-5\">\n              <h1 class=\"mb-4\">Log in</h1>\n              <form onSubmit={this.onSubmit}>\n                <div class=\"form-group\">\n                  <input\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    placeholder=\"Email Address\"\n                    id=\"form9\"\n                  />{\" \"}\n                </div>\n                <div class=\"form-group mb-3\">\n                  <input\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={password}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    id=\"form10\"\n                  />\n                  <small class=\"form-text text-muted text-right\">\n                    <a href=\"#\"> Recover password</a>\n                  </small>\n                </div>\n                <button\n                  class=\"btn btn-primary\"\n                  disabled={isInvalid}\n                  type=\"submit\"\n                >\n                  Sign In\n                </button>\n                {error && <p>{error.message}</p>}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    {\n      /* <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js\" integrity=\"sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut\" crossorigin=\"anonymous\"></script>\n          <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js\" integrity=\"sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k\" crossorigin=\"anonymous\"></script>\n    */\n    }\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React, { Component } from 'react';\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text,\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>\n              {message.user.username || message.user.userId}\n            </strong>{' '}\n            {message.text} {message.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n\n        {editMode ? (\n          <span>\n            <button onClick={this.onSaveEditText}>Save</button>\n            <button onClick={this.onToggleEditMode}>Reset</button>\n          </span>\n        ) : (\n          <button onClick={this.onToggleEditMode}>Edit</button>\n        )}\n\n        {!editMode && (\n          <button\n            type=\"button\"\n            onClick={() => onRemoveMessage(message.uid)}\n          >\n            Delete\n          </button>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default MessageItem;\n","import React from 'react';\n\nimport MessageItem from './MessageItem';\n\nconst MessageList = ({\n  messages,\n  onEditMessage,\n  onRemoveMessage,\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nexport default MessageList;\n","import React, { Component } from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.state.limit)\n      .on('value', snapshot => {\n        const messageObject = snapshot.val();\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            messages: messageList,\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    this.props.firebase.message(message.uid).set({\n      ...message,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { users } = this.props;\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading && messages && (\n              <button type=\"button\" onClick={this.onNextPage}>\n                More\n              </button>\n            )}\n\n            {loading && <div>Loading ...</div>}\n\n            {messages && (\n              <MessageList\n                messages={messages.map(message => ({\n                  ...message,\n                  user: users\n                    ? users[message.userId]\n                    : { userId: message.userId },\n                }))}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            )}\n\n            {!messages && <div>There are no messages ...</div>}\n\n            <form\n              onSubmit={event =>\n                this.onCreateMessage(event, authUser)\n              }\n            >\n              <input\n                type=\"text\"\n                value={text}\n                onChange={this.onChangeText}\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);\n","import Messages from './Messages';\n\nexport default Messages;\n","import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { withAuthorization, withEmailVerification } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport Messages from \"../Messages\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on(\"value\", snapshot => {\n      this.setState({\n        users: snapshot.val()\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Home Page</h1>\n        <p>The Home Page is accessible by every signed in user.</p>\n\n        <Messages users={this.state.users} />\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\n\nconst SIGN_IN_METHODS = [\n  {\n    id: \"password\",\n    provider: null\n  }\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        {/* <PasswordForgetForm />\n        <PasswordChangeForm />\n      <LoginManagement authUser={authUser} />*/}\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null })\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === \"password\" ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: \"\", passwordTwo: \"\" };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: \"\", passwordTwo: \"\" });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  //withEmailVerification,\n  withAuthorization(condition)\n)(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <div>\n        <h2>User ({this.props.match.params.id})</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <span>\n              <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              >\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { UserList, UserItem } from '../Users';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </div>\n);\n\nconst condition = authUser =>\n  authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AdminPage);\n","import React, { Component } from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { withAuthorization } from \"../Session\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"py-5 text-center\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"mx-auto col-lg-10\">\r\n              <h1>Dashboard</h1>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 px-5 mt-3\">\r\n                  {\" \"}\r\n                  <i className=\"d-block fa fa-stop-circle fa-4x mb-3 text-muted\" />\r\n                  <h4>Employee Activity</h4>\r\n                  <p className=\"mb-3\">\r\n                    To display the last activity of the employee click on Last\r\n                    acctivity button.\r\n                  </p>\r\n                  <div className=\"form-group\">\r\n                    {\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter employee id\"\r\n                      id=\"empid\"\r\n                    />{\" \"}\r\n                  </div>\r\n                  <a className=\"btn btn-outline-primary\" href=\"/\">\r\n                    Last Activity\r\n                  </a>\r\n                  <p className=\"mb-3\">\r\n                    To find the acivities over a period, select the start and\r\n                    end dates and click on track it button below.\r\n                  </p>\r\n                  <div className=\"form-group\">\r\n                    {\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter employee id\"\r\n                      id=\"empid1\"\r\n                    />{\" \"}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    {\" \"}\r\n                    Start Date:{\" \"}\r\n                    <input type=\"date\" data-date-inline-picker=\"true\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    {\" \"}\r\n                    End Date :{\" \"}\r\n                    <input type=\"date\" data-date-inline-picker=\"true\" />\r\n                  </div>\r\n                  <a className=\"btn btn-outline-primary\" href=\"/\">\r\n                    Track It!\r\n                  </a>\r\n                  <br />\r\n                </div>\r\n                <div className=\"col-md-6 px-5 mt-3\">\r\n                  <i className=\"d-block fa fa-stop-circle-o fa-4x mb-3 text-muted\" />\r\n                  <h4>Departmental Activity</h4>\r\n                  <p className=\"mb-3\">\r\n                    To display the Departmental Activities, enter department and\r\n                    click on track it button below.\r\n                  </p>\r\n                  <div className=\"form-group\">\r\n                    {\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter department id\"\r\n                      id=\"empid\"\r\n                    />{\" \"}\r\n                  </div>\r\n                  <a className=\"btn btn-primary\" href=\"/\">\r\n                    Track It!\r\n                    <br />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withFirebase,\r\n  withAuthorization(condition)\r\n)(Dashboard);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navigation from \"../Navigation\";\nimport LandingPage from \"../Landing\";\nimport SignUpPage from \"../SignUp\";\nimport SignInPage from \"../SignIn\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport AccountPage from \"../Account\";\nimport AdminPage from \"../Admin\";\nimport Dashboard from \"../Dashboard\";\n\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route path={ROUTES.DASHBOARD} component={Dashboard} />\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n      <Route path={ROUTES.HOME} component={HomePage} />\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}